{"version":3,"sources":["js/components/Navigation/main/Navigation.js","redux/actions/tableaux.js","js/components/utils/inputFunctions.js","js/components/Dashboard/subComponent/AddTableau.js","js/components/Dashboard/subComponent/CreateTable.js","js/components/ContextMenu/ContextMenu.js","js/components/Dashboard/subComponent/TableauLink.js","js/components/Dashboard/main/Dashboard.js","js/components/Listes/subComponent/ListeTitle.js","js/components/Cartes/subComponent/CarteEditable.js","js/components/Cartes/subComponent/ProgressBar.js","js/components/Cartes/subComponent/CarteTitle.js","redux/actions/popup.js","js/components/Cartes/subComponent/CarteContent.js","js/components/Cartes/main/Carte.js","js/components/Listes/subComponent/AddCarte.js","redux/filters/tableaux.js","js/components/Listes/main/Liste.js","js/components/Tableaux/subComponent/AddListe.js","js/components/Draggable/utils/functions.js","js/components/Draggable/Draggable.js","js/components/CartePopup/subComponent/Header.js","js/components/CartePopup/subComponent/Description.js","js/components/CartePopup/subComponent/Commentaire.js","js/components/CartePopup/subComponent/LeftPanel.js","js/components/CartePopup/subComponent/Etiquettes.js","js/components/CartePopup/subComponent/CheckListItem.js","js/components/CartePopup/subComponent/Checklist.js","js/components/CartePopup/subComponent/Echeance.js","js/components/CartePopup/subComponent/RightPanel.js","js/components/CartePopup/main/CartePopup.js","js/components/Tableaux/main/Tableau.js","App.js","redux/reducers/tableaux.js","redux/reducers/popup.js","serviceWorker.js","index.js","redux/store/configStore.js"],"names":["Navigation","props","react_default","a","createElement","react_router_dom","to","process","className","Fragment","addTableau","tableau","type","payload","addListToTableau","titre","addCardToList","liste","updateList","field","value","updateCarte","carte","toggleCheckbox","index","deleteItem","itemType","item","changeListPosition","currentPos","nextPos","checkInput","input","length","checkLength","test","checkIfAuthorized","AddTableau","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeTitre","event","setState","target","onSubmitTable","state","dispatch","onValidateCreation","onChange","placeholder","onClick","React","Component","connect","CreateTable","onCreateTable","prevState","createTable","subComponent_AddTableau","ContextMenu","children","TableauLink","onOpenContext","preventDefault","isContextOpen","onCloseContext","_this2","id","onContextMenu","components_ContextMenu_ContextMenu","index_esm","tableaux","_ref","fromId","map","tableauId","key","subComponent_TableauLink","subComponent_CreateTable","ListeTitle","onInputClick","editable","onSubmit","onInputChange","onKeyPress","CarteEditable","onChangeCarteValue","onValidateCarteValue","ProgressBar","style","width","checklist","totalOfCheckboxes","totalChecked","onEditSelect","listeTitre","filter","checked","borderColor","etiquette","content","subComponent_ProgressBar","CarteContent","onSaveEdition","onEditCardValue","onEdit","subComponent_CarteEditable","subComponent_CarteTitle","Carte","subComponent_CarteContent","AddCarte","onValueChange","onToggleEditable","onValidateCarte","getTableau","getOneListe","listeId","listes","getCartes","cartes","Liste","status","carteId","createCarte","_this$props","subComponent_ListeTitle","main_Carte","subComponent_AddCarte","AddListe","onSubmitListe","onSelectInput","inputSelected","onFocus","name","getItemsPosition","items","document","getElementsByClassName","arrayOfPosition","i","push","offsetParent","offsetLeft","isAboveOtherItem","itemsPositions","currentTranslation","initialXPosition","Draggable","onMouseDown","isMouseDown","mousePositionOnClick","pageX","onMouseUp","mouseRelativePosition","hoveredItemPosition","position","reinitTranslation","onMouseMove","initialPosition","x","itemIsHovered","y","draggableContainer","createRef","getBoundingClientRect","left","top","ref","element","transform","translation","zIndex","Header","carteTitre","onClose","io_index_esm","Description","onChangeDescription","descriptionValue","onSubmitDescription","description","rows","onBlur","Commentaire","onChangeCommentaire","commentaireValue","onSubmitCommentaire","commentaire","LeftPanel","subComponent_Header","subComponent_Description","subComponent_Commentaire","colors","Etiquettes","currentEtiquette","onChangeEtiquette","color","CheckListItem","onToggleCheck","defaultChecked","htmlFor","Checklist","onChangeItem","elementValue","onAddItemClick","isAddItemActive","onValidateAddItem","subComponent_CheckListItem","Echeance","onToggleCalendar","openCalendar","onChangeDate","date","selectedDate","onAddEcheance","Date","currentEcheance","setDate","getDate","isEcheancePassed","toLocaleDateString","entry_default","fromTableau","fromListe","_id","echeance","subComponent_Etiquettes","subComponent_Checklist","subComponent_Echeance","carteRedux","subComponent_LeftPanel","subComponent_RightPanel","Tableau","movingItemPosition","hoveredItemTranslation","selectedCarte","tableauLoaded","Math","random","sort","currentKey","nextKey","listeID","components_Draggable_Draggable","hoveredPosition","main_Liste","match","params","subComponent_AddListe","tableId","onAddListe","popup","isOpen","CartePopup_main_CartePopup","App","_React$createElement","Navigation_main_Navigation","react_router","exact","path","defineProperty","Dashboard","component","defaultTableauxState","saveToLocalStorage","localStorage","setItem","JSON","stringify","getNewId","uuid","action","objectSpread","concat","toConsumableArray","addChecklist","console","log","tableauxReducer","arguments","undefined","_objectSpread2","_objectSpread3","addListe","_objectSpread5","addCarte","parse","getItem","updateChecklist","_objectSpread23","hoveredListID","_item$_id","rest","objectWithoutProperties","_toPropertyKey","newFromId","_state$fromTableau$li","carteRest","newCarteFromId","initialPopupState","popupReducers","newState","Boolean","window","location","hostname","store","createStore","combineReducers","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e7478692.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\n// import Profile from './Profile';\r\n\r\n// import { connect } from 'react-redux';\r\n\r\nconst Navigation = (props) => (\r\n    <nav>\r\n        <Link to={process.env.PUBLIC_URL + '/'}><h5>Weello</h5></Link>\r\n        <div className=\"user__block\">\r\n                <React.Fragment>\r\n                    {/* <Link to=\"/connection\"><button className=\"connection\">Connexion</button></Link>\r\n                    <Link to=\"/inscription\"><button className=\"inscription\">Inscription</button></Link> */}\r\n                </React.Fragment>\r\n                {/* <Profile/> */}\r\n        </div>\r\n    </nav>\r\n);\r\n\r\nexport default Navigation;","export const loadTableaux = () => ({\r\n    type: 'LOAD_TABLEAUX'\r\n});\r\n\r\nexport const addTableau = (tableau) => ({\r\n    type: 'ADD_TABLEAU',\r\n    payload: tableau\r\n});\r\n\r\nexport const addListToTableau = (tableau, titre) => ({\r\n    type: 'ADD_LISTE',\r\n    tableau, titre\r\n});\r\n\r\nexport const addCardToList = (liste, titre) => ({\r\n    type: 'ADD_CARTE',\r\n    liste, titre\r\n});\r\n\r\nexport const updateList = (field, value, liste) => ({\r\n    type: 'UPDATE_LISTE',\r\n    field, value, liste\r\n});\r\n\r\nexport const updateCarte = (field, value, carte) => ({\r\n    type: 'UPDATE_CARTE',\r\n    field, value, carte\r\n});\r\n\r\nexport const toggleCheckbox = (carte, index) => ({\r\n    type: 'TOGGLE_CHECKBOX',\r\n    carte, index\r\n});\r\n\r\nexport const deleteItem = (itemType, item) => ({\r\n    type: 'DELETE_ITEM',\r\n    itemType, item\r\n});\r\n\r\nexport const changeListPosition = (liste, currentPos, nextPos) => ({\r\n    type: 'CHANGE_LIST_POSITION',\r\n    liste, currentPos, nextPos\r\n});","const checkLength = (input) => {\r\n    return input.length > 0;\r\n}\r\n\r\nconst checkIfAuthorized = (input) => {\r\n   return /^[A-z0-9\\s-]+$/.test(input);\r\n}\r\n\r\nexport const checkInput = (input) => {\r\n    return checkLength(input) && checkIfAuthorized(input);\r\n}","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { addTableau } from '../../../../redux/actions/tableaux';\r\nimport { checkInput } from '../../utils/inputFunctions';\r\n\r\nclass AddTableau extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { titre: '' }\r\n    }\r\n\r\n    onChangeTitre = (event) => {\r\n        this.setState({\r\n            titre: event.target.value\r\n        })\r\n    }\r\n\r\n    onSubmitTable = () => {\r\n        if(checkInput(this.state.titre)){\r\n            this.props.dispatch(addTableau(this.state.titre));\r\n            this.props.onValidateCreation();\r\n        } \r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"dashboard__add-table__form\">\r\n                <input \r\n                    onChange={this.onChangeTitre} \r\n                    value={this.state.titre} \r\n                    placeholder=\"Titre\"\r\n                    className=\"rounded\"\r\n                />\r\n                <button \r\n                    onClick={this.onSubmitTable}\r\n                    className=\"rounded\"\r\n                >Créer ce projet</button>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default connect()(AddTableau);","import React from 'react';\r\n\r\nimport AddTableau from './AddTableau';\r\n\r\nclass CreateTable extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { createTable: false }\r\n    }\r\n\r\n    onCreateTable = () => {\r\n        this.setState((prevState) => ({\r\n            createTable: !prevState.createTable\r\n        }));\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                {\r\n                    this.state.createTable\r\n                    ? <AddTableau onCreateTable={this.onCreateTable} onValidateCreation={this.onCreateTable}/>\r\n                    : <button className=\"dashboard__add-table__button\" onClick={this.onCreateTable}>Créer un projet</button>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateTable;","import React from 'react';\r\nimport './ContextMenu.css';\r\n\r\nconst ContextMenu = (props) => (\r\n    <div className=\"context__menu\">\r\n        {props.children}\r\n    </div>\r\n);\r\n\r\nexport default ContextMenu;","import { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContextMenu from '../../ContextMenu/ContextMenu';\r\n\r\nimport { MdDeleteForever } from 'react-icons/md';\r\nimport { deleteItem } from '../../../../redux/actions/tableaux';\r\n\r\nclass TableauLink extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isContextOpen: false\r\n        }\r\n    }\r\n\r\n    onOpenContext = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            isContextOpen: true\r\n        })\r\n    }\r\n\r\n    onCloseContext = () => {\r\n        this.setState({\r\n            isContextOpen: false\r\n        })\r\n    }\r\n\r\n    render(){\r\n        let tableau = this.props.tableau;\r\n        let id = this.props.id;\r\n        return (\r\n            <React.Fragment>\r\n                <Link to={process.env.PUBLIC_URL + \"/projet/\" + id} onContextMenu={this.onOpenContext}>\r\n                    <button className=\"dashboard__table-select-button\">{ tableau.titre }</button>\r\n                </Link>\r\n                {this.state.isContextOpen && (\r\n                    <ContextMenu>\r\n                        <div><MdDeleteForever/><button onClick={() => this.props.dispatch(deleteItem('tableau', tableau))}>Supprimer</button></div>\r\n                    </ContextMenu>\r\n                )}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default connect()(TableauLink);","import React from 'react';\r\n\r\nimport CreateTable from '../subComponent/CreateTable';\r\nimport TableauLink from '../subComponent/TableauLink';\r\nimport { connect } from 'react-redux';\r\nimport './Dashboard.css';\r\n\r\nconst Dashboard = ({tableaux}) => (\r\n    <div className=\"dashboard\">\r\n        {\r\n            tableaux &&\r\n            tableaux.fromId.map((tableauId) => (\r\n                <div className=\"tableauLink__container\" key={tableauId}>\r\n                    <TableauLink tableau={tableaux[tableauId]} id={tableauId}/>\r\n                </div>\r\n            ))\r\n        }\r\n        <CreateTable/>\r\n    </div> \r\n)\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tableaux: state.tableaux\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateList } from '../../../../redux/actions/tableaux';\r\nimport { checkInput } from '../../utils/inputFunctions';\r\n\r\nclass ListeTitle extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            titre: '',\r\n            editable: false\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({\r\n            titre: this.props.liste.titre\r\n        })\r\n    }\r\n\r\n    onInputClick = () => {\r\n        this.setState({\r\n            editable: true\r\n        })\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        if(event.key === 'Enter' && checkInput(this.state.titre)){\r\n            this.props.dispatch(updateList('titre', this.state.titre, this.props.liste))\r\n            this.setState({\r\n                editable: false\r\n            });\r\n        }\r\n    }\r\n\r\n    onInputChange = (event) => {\r\n        this.setState({\r\n            titre: event.target.value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"cardTitle\">\r\n                <input onClick={this.onInputClick} onKeyPress={this.onSubmit} onChange={(event) => this.onInputChange(event)} type=\"text\" value={this.state.titre} className={this.state.editable ? '' : 'notEditable'}/>\r\n                <button>...</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(ListeTitle);","import React from 'react';\r\n\r\nconst CarteEditable = ({titre, onChangeCarteValue, onValidateCarteValue}) => (\r\n    <div className=\"rounded carte__edit__component\">\r\n        <input onChange={onChangeCarteValue} value={titre}/>\r\n        <button onClick={onValidateCarteValue}>Enregistrer</button>\r\n    </div>\r\n);\r\n\r\nexport default CarteEditable;","import React from 'react';\r\n\r\nconst ProgressBar = ({value}) => (\r\n        <div className=\"progressBar__container\">\r\n            <div className=\"progressBar__progress\" style={{width: (value + '%')}}></div>\r\n        </div>\r\n    );\r\n\r\nexport default ProgressBar;","import React from 'react';\r\nimport ProgressBar from './ProgressBar';\r\nimport { connect } from 'react-redux';\r\nimport { openPopUp } from '../../../../redux/actions/popup';\r\n\r\nconst CarteTitle = ({carte, onEditSelect, listeTitre, dispatch}) => {\r\n    let checklist, totalOfCheckboxes, totalChecked;\r\n    if(carte.checklist){\r\n        checklist = carte.checklist;\r\n        totalOfCheckboxes = checklist.length;\r\n        totalChecked = checklist.filter(item => item.checked).length;\r\n    }\r\n    return(\r\n        <div className=\"rounded carte__title\" style={{borderColor: carte.etiquette}}>\r\n            <p onClick={() => dispatch(openPopUp({carte, listeTitre}))}>{carte.titre}</p>\r\n            <button className=\"carte__edit-button\" onClick={onEditSelect}>Editer</button>\r\n            {carte.checklist && !!carte.checklist.length && <ProgressBar value={(totalChecked/totalOfCheckboxes) * 100}/>}\r\n        </div>\r\n    )\r\n} ;\r\n\r\nexport default connect()(CarteTitle);","export const openPopUp = (content) => ({\r\n    type: 'OPEN_POPUP',\r\n    content\r\n});\r\n\r\nexport const closePopUp = () => ({\r\n    type: 'CLOSE_POPUP'\r\n})","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CarteEditable from './CarteEditable';\r\nimport CarteTitle from './CarteTitle';\r\nimport { updateCarte } from '../../../../redux/actions/tableaux';\r\nimport { checkInput } from '../../utils/inputFunctions';\r\n\r\nclass CarteContent extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            editable: false,\r\n            titre: ''\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({\r\n            titre: this.props.carte.titre\r\n        })\r\n    }\r\n\r\n    onSaveEdition = () => {\r\n        if(checkInput(this.state.titre)){\r\n            this.props.dispatch(updateCarte('titre', this.state.titre, this.props.carte));\r\n            this.setState((prevState) => ({\r\n                editable: !prevState.editable\r\n            }));\r\n        } \r\n    }\r\n\r\n    onEditCardValue = (event) => {\r\n        this.setState({\r\n            titre: event.target.value\r\n        });\r\n    }\r\n\r\n    onEdit = () => {\r\n        this.setState({\r\n            editable: true\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                {\r\n                    this.state.editable\r\n                    ? <CarteEditable onChangeCarteValue={this.onEditCardValue} onValidateCarteValue={this.onSaveEdition} titre={this.state.titre} />\r\n                    : <CarteTitle listeTitre={this.props.listeTitre} carte={this.props.carte} titre={this.state.titre} onEditSelect={this.onEdit}/>\r\n                }\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n};\r\n\r\nexport default connect()(CarteContent);","import React from 'react';\r\nimport CarteContent from '../subComponent/CarteContent';\r\n\r\nimport './carte.css';\r\n\r\nconst Carte = ({ carte, listeTitre }) => (\r\n    <div className=\"carte\">\r\n        <CarteContent \r\n            etiquette={carte.etiquette}\r\n            carte={carte}\r\n            listeTitre={listeTitre}\r\n        />\r\n    </div>\r\n)\r\n\r\nexport default Carte;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addCardToList } from '../../../../redux/actions/tableaux';\r\nimport { checkInput } from '../../utils/inputFunctions';\r\n\r\nclass AddCarte extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            editable: false,\r\n            value: ''\r\n        }\r\n    }\r\n\r\n    onValueChange = (event) => {\r\n        this.setState({\r\n            value: event.target.value\r\n        })\r\n    }\r\n\r\n    onToggleEditable = () => {\r\n        this.setState((prevState) => ({\r\n            editable: !prevState.editable\r\n        }))\r\n    }\r\n\r\n    onValidateCarte = () => {\r\n        if(checkInput(this.state.value)){\r\n            this.props.dispatch(addCardToList(this.props.liste, this.state.value));\r\n            this.setState({\r\n                editable: false,\r\n                value: ''\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"addAction\">\r\n                {\r\n                    this.state.editable\r\n                    ?   <div className=\"addActionInput\">\r\n                            <input type='text' onChange={this.onValueChange} value={this.state.value}/>\r\n                            <div>\r\n                                <button className=\"addButton rounded\" onClick={this.onValidateCarte}>Ajouter</button>\r\n                                <button className=\"closeButton\" onClick={this.onToggleEditable}>X</button>\r\n                            </div>\r\n                        </div>\r\n                    :   <button className=\"cardAddAction\" onClick={this.onToggleEditable}>Ajouter une action</button>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(AddCarte);","export const filterTableaux = (tableaux, id) => {\r\n    return tableaux.filter(tableau => tableau._id === id)[0];\r\n}\r\n\r\nexport const getTableau = (state, tableauId) => {\r\n    return state[tableauId];\r\n}\r\n\r\nexport const getListes = (state, tableauId) => {\r\n    return state[tableauId].listes;\r\n}\r\n\r\nexport const getOneListe = (state, tableauId, listeId) => {\r\n    return state[tableauId].listes[listeId];\r\n}\r\n\r\nexport const getCartes = (state, tableauId, listeId) => {\r\n    return state[tableauId].listes[listeId].cartes;\r\n}","import React from 'react';\r\nimport './card.css';\r\nimport { connect } from 'react-redux';\r\nimport ListeTitle from '../subComponent/ListeTitle';\r\nimport Carte from '../../Cartes/main/Carte';\r\nimport AddCarte from '../subComponent/AddCarte';\r\nimport { getOneListe, getCartes } from '../../../../redux/filters/tableaux';\r\n\r\nclass Liste extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            status: {\r\n                carteId: '',\r\n                cartes: null,\r\n                createCarte: false\r\n            }\r\n        }\r\n    }\r\n\r\n    onAddCarte(){\r\n        this.setState((prevState) => ({\r\n            createCarte: !prevState.createCarte\r\n        }))\r\n    } \r\n\r\n    render(){\r\n        let { liste, cartes } = this.props;\r\n        return(\r\n            <div className=\"card rounded liste\">\r\n                <ListeTitle liste={liste}/>\r\n                <div className=\"liste_content\">\r\n                {\r\n                    cartes &&\r\n                    cartes.fromId.map(carteId => (\r\n                        <React.Fragment key={carteId}>\r\n                            <Carte \r\n                                carte={cartes[carteId]}\r\n                                listeTitre={liste.titre}/>\r\n                        </React.Fragment>\r\n                    ))\r\n                }\r\n                </div>\r\n                <AddCarte liste={liste}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    liste: getOneListe(state.tableaux, props.tableauId, props.listeId),\r\n    cartes: getCartes(state.tableaux, props.tableauId, props.listeId)\r\n})\r\n\r\nexport default connect(mapStateToProps)(Liste);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './addListe.css';\r\nimport { addListToTableau } from '../../../../redux/actions/tableaux';\r\nimport { checkInput } from '../../utils/inputFunctions';\r\n\r\nclass AddListe extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            titre: '',\r\n            inputSelected: false\r\n        }\r\n    }\r\n\r\n    onChangeTitre = (event) => {\r\n        this.setState({\r\n            titre: event.target.value\r\n        })\r\n    }\r\n\r\n    onSubmitListe = () => {\r\n        if(checkInput(this.state.titre)){\r\n            this.props.dispatch(addListToTableau(this.props.tableau, this.state.titre));\r\n            this.setState({\r\n                titre: ''\r\n            });\r\n            this.onSelectInput();\r\n        }\r\n        \r\n    }\r\n\r\n    onSelectInput = () => {\r\n        this.setState((prevState) => ({\r\n            inputSelected: !prevState.inputSelected\r\n        }))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className={this.state.inputSelected ? \"addListe visible rounded\" : \"addListe hidden rounded\"}>\r\n                <input \r\n                    onFocus={this.onSelectInput} \r\n                    name=\"liste_titre\" \r\n                    onChange={this.onChangeTitre} \r\n                    value={this.state.titre} \r\n                    placeholder=\"Ajouter une liste...\"\r\n                    className=\"rounded\"\r\n                />\r\n                {\r\n                    this.state.inputSelected &&\r\n                    <div className=\"addListe_hidden\">\r\n                        <button className=\"addButton rounded\" onClick={this.onSubmitListe}>Enregistrer</button>\r\n                        <button className=\"closeButton\" onClick={this.onSelectInput}>X</button>\r\n                    </div>\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default connect()(AddListe);","export const getItemsPosition = (itemType) => {\r\n    let items = document.getElementsByClassName(itemType);\r\n    let arrayOfPosition = [];\r\n    for(let i = 0; i < items.length; i++){\r\n        arrayOfPosition.push(items[i].offsetParent.offsetLeft);\r\n    }\r\n    return arrayOfPosition;\r\n}\r\n\r\nexport const isAboveOtherItem = (itemsPositions, currentTranslation, initialXPosition) => {\r\n    for(let i = 0; i < itemsPositions.length; i++){\r\n        if(((itemsPositions[i] - initialXPosition) >= currentTranslation && (itemsPositions[i] - initialXPosition) < (currentTranslation + 100)) || ((itemsPositions[i] - initialXPosition) <= currentTranslation && (itemsPositions[i] - initialXPosition) > (currentTranslation - 100))){\r\n            return i;\r\n        }  \r\n    }\r\n    return false;\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getItemsPosition, isAboveOtherItem } from './utils/functions';\r\nimport { changeListPosition } from '../../../redux/actions/tableaux';\r\n\r\nimport './Draggable.css';\r\n\r\nclass Draggable extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            initialPosition: {x: 0, y: 0},\r\n            mousePositionOnClick: 0,\r\n            mouseRelativePosition: 0,\r\n            hoveredItemPosition: false,\r\n            isMouseDown: false,\r\n        }\r\n        this.draggableContainer = React.createRef();\r\n    }\r\n\r\n\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            initialPosition: {x: this.draggableContainer.getBoundingClientRect().left, y: this.draggableContainer.getBoundingClientRect().top}\r\n        })\r\n    }\r\n\r\n    onMouseDown = (event) => {\r\n        this.setState({\r\n            isMouseDown: true,\r\n            mousePositionOnClick: event.pageX\r\n        })\r\n    }\r\n    onMouseUp = () => {\r\n        this.setState({\r\n            isMouseDown: false,\r\n            mousePositionOnClick: -1,\r\n            mouseRelativePosition: 0\r\n        });\r\n        if(this.state.hoveredItemPosition >= 0 && this.state.hoveredItemPosition !== this.props.position && this.state.hoveredItemPosition !== false){\r\n            \r\n            this.props.dispatch(changeListPosition(this.props.item, this.props.position, this.state.hoveredItemPosition))\r\n        }\r\n        this.props.reinitTranslation();\r\n    }\r\n    onMouseMove = (event) => {\r\n        if(this.state.isMouseDown){\r\n            this.setState({\r\n                mouseRelativePosition: event.pageX - this.state.mousePositionOnClick,\r\n                hoveredItemPosition: isAboveOtherItem(getItemsPosition('liste'), this.state.mouseRelativePosition, this.state.initialPosition.x)\r\n            }, () => this.props.itemIsHovered(this.state.hoveredItemPosition));\r\n        } \r\n    }\r\n    render(){\r\n        return(\r\n            <div \r\n            onMouseDown={this.onMouseDown} \r\n            onMouseMove={this.onMouseMove} \r\n            onMouseUp={this.onMouseUp} \r\n            ref={element => this.draggableContainer = element}\r\n            className=\"draggable__container\"\r\n            style={{transform: 'translateX(' + (this.state.mouseRelativePosition + this.props.translation) + 'px)', zIndex: (this.state.isMouseDown ? 30 : 1)}}\r\n            >\r\n\r\n                {this.props.children}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default connect()(Draggable);","import React from 'react';\r\nimport { IoIosClose } from \"react-icons/io\";\r\n\r\nconst Header = ({carteTitre, listeTitre, onClose}) => (\r\n    <div className=\"popup__header\">\r\n        <div>\r\n            <h3>{carteTitre}</h3>\r\n            <span>Dans la liste <b>{listeTitre}</b></span>\r\n        </div>\r\n        <button onClick={onClose} className=\"close__popup\"><IoIosClose/></button>\r\n    </div>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateCarte } from '../../../../redux/actions/tableaux';\r\n\r\n\r\nclass Description extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            descriptionValue: ''\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({\r\n            descriptionValue: this.props.carte.description\r\n        })\r\n    }\r\n\r\n    onChangeDescription = (event) => {\r\n        this.setState({\r\n            descriptionValue: event.target.value\r\n        })\r\n    }\r\n\r\n    onSubmitDescription = () => {\r\n        if(this.state.descriptionValue.length > 0){\r\n            this.props.dispatch(updateCarte('description', this.state.descriptionValue, this.props.carte));\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let { descriptionValue } = this.state;\r\n        return (\r\n            <div className=\"popup__description\">\r\n                <h3>Ajouter une description</h3>\r\n                <textarea rows='4' placeholder=\"Ajoutez une description\" onBlur={this.onSubmitDescription} onChange={this.onChangeDescription} value={descriptionValue}></textarea>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(Description);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateCarte } from '../../../../redux/actions/tableaux';\r\n\r\n\r\nclass Commentaire extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            commentaireValue: ''\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({\r\n            commentaireValue: this.props.carte.commentaire\r\n        })\r\n    }\r\n\r\n    onChangeCommentaire = (event) => {\r\n        this.setState({\r\n            commentaireValue: event.target.value\r\n        })\r\n    }\r\n\r\n    onSubmitCommentaire = () => {\r\n        if(this.state.commentaireValue.length > 0){\r\n            this.props.dispatch(updateCarte('commentaire', this.state.commentaireValue, this.props.carte));\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let { commentaireValue } = this.state;\r\n        return (\r\n            <div className=\"popup__commentaire\">\r\n                <h3>Ajouter un commentaire</h3>\r\n                <textarea rows='4' placeholder=\"Ecrivez un commentaire\" onBlur={this.onSubmitCommentaire} onChange={this.onChangeCommentaire} value={commentaireValue}></textarea>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(Commentaire);","import React from 'react';\r\nimport Header from './Header';\r\nimport Description from './Description';\r\nimport Commentaire from './Commentaire';\r\n\r\nconst LeftPanel = ({carte, listeTitre, onClose}) => (\r\n    <div className=\"left-panel\">\r\n        <Header listeTitre={listeTitre} carteTitre={carte.titre} onClose={onClose}/>\r\n        <Description carte={carte}/>\r\n        <Commentaire carte={carte}/>\r\n    </div>\r\n);\r\n\r\nexport default LeftPanel;","import React from 'react';\r\n\r\nconst colors = ['yellowgreen', 'darkcyan', 'crimson', 'chocolate', 'gold'];\r\n\r\nconst Etiquettes = ({currentEtiquette, onChangeEtiquette}) => (\r\n    <li>\r\n        <h5>Etiquettes</h5>\r\n        <div className=\"etiquettes__container\">\r\n            {colors.map(color => (\r\n                <div key={color} className={color + (currentEtiquette === color ? \" selectedEtiquette\" : \"\")} onClick={() => onChangeEtiquette(color)}></div>\r\n            ))}\r\n        </div>\r\n\r\n    </li>\r\n);\r\n\r\nexport default Etiquettes;","import React from 'react';\r\n\r\nconst CheckListItem = ({item, index, onToggleCheck}) => (\r\n    <div>\r\n        <input type=\"checkbox\" id={item.titre} name={item.titre}\r\n        defaultChecked={item.checked} onClick={() => onToggleCheck(index)}/>\r\n        <label htmlFor={item.titre}>{item.titre}</label>          \r\n    </div>\r\n);\r\n\r\n\r\nexport default CheckListItem;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateCarte, toggleCheckbox } from '../../../../redux/actions/tableaux';\r\nimport CheckListItem from './CheckListItem';\r\n\r\nclass Checklist extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isAddItemActive: false,\r\n            elementValue: ''\r\n        }\r\n    }\r\n\r\n    onChangeItem = (event) => {\r\n        this.setState({\r\n            elementValue: event.target.value\r\n        });\r\n    }\r\n\r\n    onAddItemClick = () => {\r\n        this.setState({\r\n            isAddItemActive: true\r\n        })\r\n    }\r\n\r\n    onValidateAddItem = () => {\r\n        if(this.state.elementValue.length === 0){\r\n            this.setState({\r\n                isAddItemActive: false\r\n            });\r\n        } else {\r\n            this.props.dispatch(updateCarte('checklist', this.state.elementValue, this.props.carte));\r\n            this.setState({\r\n                elementValue: '',\r\n                isAddItemActive: false\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    onToggleCheck = (index) => {\r\n        this.props.dispatch(toggleCheckbox(this.props.carte, index))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <li>\r\n                <h5>Checklist</h5>\r\n                <div className=\"popup__checklist\">\r\n                    <div className=\"popup__checklist__items\">\r\n                        {this.props.carte.checklist && this.props.carte.checklist.map((item, index) => (\r\n                            <CheckListItem item={item} index={index} onToggleCheck={this.onToggleCheck}/>\r\n                        ))}\r\n                    </div>\r\n                    {this.state.isAddItemActive && <input type=\"text\" value={this.state.elementValue} onChange={this.onChangeItem}/>}\r\n                    {this.state.isAddItemActive && <button onClick={this.onValidateAddItem}>Valider</button>}\r\n                    {!this.state.isAddItemActive && <button onClick={this.onAddItemClick}>Ajouter un element</button>}\r\n                    \r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(Checklist);","import React from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport { connect } from 'react-redux';\r\nimport { updateCarte } from '../../../../redux/actions/tableaux';\r\n\r\nclass Echeance extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            openCalendar: false,\r\n            selectedDate: ''\r\n        }\r\n    }\r\n\r\n    onToggleCalendar = () => {\r\n        this.setState(prevState => ({\r\n            openCalendar: !prevState.openCalendar\r\n        }))\r\n    }\r\n\r\n    onChangeDate = (date) => {\r\n        this.setState({\r\n            selectedDate: date\r\n        });\r\n    }\r\n\r\n    onAddEcheance = () => {\r\n        this.props.dispatch(updateCarte('echeance', this.state.selectedDate, this.props.carte));\r\n        this.onToggleCalendar();\r\n    }\r\n\r\n    render(){\r\n        let date = new Date(this.props.currentEcheance);\r\n        date.setDate(date.getDate() + 1);\r\n        let isEcheancePassed = new Date() >= date;\r\n        return(\r\n            <li className=\"popup__echeance\">\r\n                <h5>Echeance</h5>\r\n                {this.props.currentEcheance && <p className={isEcheancePassed ? \"echeanceTermine\" : \"\"}>{date.toLocaleDateString()}</p>}\r\n                {!this.state.openCalendar && <button onClick={this.onToggleCalendar}>Modifier l'écheance</button>}\r\n                {this.state.openCalendar && <button onClick={this.onAddEcheance}>Valider cette écheance</button>}\r\n                {this.state.openCalendar && <Calendar onChange={this.onChangeDate}/>}\r\n            </li>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    currentEcheance: state.tableaux[props.carte.fromTableau].listes[props.carte.fromListe].cartes[props.carte._id].echeance || false\r\n});\r\n\r\nexport default connect(mapStateToProps)(Echeance);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Etiquettes from './Etiquettes';\r\nimport Checklist from './Checklist';\r\nimport Echeance from './Echeance';\r\nimport { deleteItem, updateCarte } from '../../../../redux/actions/tableaux';\r\n\r\nconst RightPanel = ({dispatch, carte, onClose}) => (\r\n    <div className=\"right-panel\">\r\n        <div>\r\n            <h3>Ajouter</h3>\r\n            <ul>\r\n                <Etiquettes currentEtiquette={carte.etiquette} onChangeEtiquette={(etiquette) => dispatch(updateCarte('etiquette', etiquette, carte))}/>\r\n                <Checklist carte={carte}/>\r\n                <Echeance carte={carte}/>\r\n            </ul>\r\n        </div>\r\n        <div>\r\n            <h3>Actions</h3>\r\n            <ul className=\"suppression\">\r\n                <li onClick={() => {\r\n                    dispatch(deleteItem('carte', carte));\r\n                    onClose();\r\n                }}>Supprimer</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default connect()(RightPanel);","import React from 'react';\r\nimport { connect } from 'react-redux'; \r\n\r\nimport './CartePopup.css';\r\n\r\nimport LeftPanel from '../subComponent/LeftPanel';\r\nimport RightPanel from '../subComponent/RightPanel';\r\n\r\nconst CartePopup = ({listeTitre, carteRedux, onClose}) => (\r\n    <div className=\"popup\">\r\n        <div className=\"background\"></div>\r\n        <div className=\"content rounded\">\r\n            <LeftPanel carte={carteRedux} listeTitre={listeTitre} onClose={onClose}/>\r\n            <RightPanel carte={carteRedux} onClose={onClose}/>\r\n        </div>\r\n    </div>\r\n    )\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    carteRedux: state.tableaux[props.carte.fromTableau].listes[props.carte.fromListe].cartes[props.carte._id]\r\n})\r\n\r\nexport default connect(mapStateToProps)(CartePopup);","import React from 'react';\r\nimport Liste from '../../Listes/main/Liste';\r\nimport AddListe from '../subComponent/AddListe';\r\nimport { connect } from 'react-redux';\r\nimport Draggable from '../../Draggable/Draggable';\r\nimport CartePopup from '../../CartePopup/main/CartePopup';\r\nimport { closePopUp } from '../../../../redux/actions/popup';\r\nimport { getTableau } from '../../../../redux/filters/tableaux';\r\n\r\nclass Tableau extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            selectedCarte: '',\r\n            tableau: {},\r\n            tableauLoaded: false,\r\n            key: 0,\r\n            hoveredItemTranslation: 0,\r\n            hoveredItemPosition: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            tableau: this.props.tableaux,\r\n            key: Math.random()\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps(props){\r\n        this.setState({\r\n            tableau: props.tableaux,\r\n            key: Math.random()\r\n        })\r\n    }\r\n\r\n    itemIsHovered = (movingItemPosition, hoveredItemPosition) => {\r\n        if(movingItemPosition < hoveredItemPosition){\r\n            this.setState({\r\n                hoveredItemPosition: hoveredItemPosition,\r\n                hoveredItemTranslation: -20\r\n            });\r\n        } else if(movingItemPosition > hoveredItemPosition){\r\n            this.setState({\r\n                hoveredItemPosition: hoveredItemPosition,\r\n                hoveredItemTranslation: 20\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    reinitTranslation = () => {\r\n        this.setState({\r\n            hoveredItemTranslation: 0\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        let { tableau } = this.props;\r\n        let listes = tableau.listes.fromId.sort((currentKey, nextKey) => { \r\n            return tableau.listes[currentKey].position - tableau.listes[nextKey].position\r\n        });\r\n        return(\r\n            <div className=\"tableau\" key={this.state.key} onContextMenu={this.onOpenContext}>\r\n                {\r\n                    tableau.listes &&\r\n                    listes.map((listeID, index) => (\r\n                        <Draggable reinitTranslation={this.reinitTranslation} key={index} translation={index === this.state.hoveredItemPosition ? this.state.hoveredItemTranslation : 0} position={tableau.listes[listeID].position} item={tableau.listes[listeID]} itemIsHovered={(hoveredPosition) => this.itemIsHovered(tableau.listes[listeID].position, hoveredPosition)}>\r\n                            <Liste \r\n                                liste={tableau.listes[listeID]}\r\n                                listeId={listeID}\r\n                                tableauId={this.props.match.params.id}\r\n                            />\r\n                        </Draggable>\r\n                    ))\r\n                }\r\n                    <div><AddListe tableau={tableau} tableId={this.props.match.params.id} onAddListe={this.onAddListe}/></div>\r\n                    {this.props.popup.isOpen && <CartePopup carte={this.props.popup.carte} listeTitre={this.props.popup.listeTitre} onClose={() => this.props.dispatch(closePopUp())}/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        tableau: getTableau(state.tableaux, props.match.params.id),\r\n        popup: state.popup\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Tableau);","import React from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './App.css';\n\nimport Navigation from './js/components/Navigation/main/Navigation';\nimport Dashboard from './js/components/Dashboard/main/Dashboard';\nimport Tableau from './js/components/Tableaux/main/Tableau';\nimport { loadTableaux } from './redux/actions/tableaux';\n\nclass App extends React.Component{\n  componentWillMount(){\n    this.props.dispatch(loadTableaux());\n  }\n  render(){\n    return(\n      <div className=\"App\">\n        <Router>\n          <Navigation/>\n          <Route exact path={process.env.PUBLIC_URL + \"/\"} exact component={Dashboard}/>\n          <Route path={process.env.PUBLIC_URL + \"/projet/:id\"} component={Tableau}/>\n          {/*<Route path=\"/connection\" component={Connection}/>\n          <Route path=\"/inscription\" component={Inscription}/> */}\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default connect()(App);\n","import uuid from 'uuid';\r\n\r\n/*\r\n--------------------------------------SCHEMA\r\n\r\nstate: {\r\n    tableauId: {\r\n        _id: tableauId,\r\n        titre: String,\r\n        listes: {\r\n            listeId: {\r\n                _id: listeId,\r\n                fromTableau: tableauId,\r\n                titre: String,\r\n                cartes: {\r\n                    carteId: {\r\n                        id: carteId,\r\n                        titre: String,\r\n                        fromTableau: tableauId,\r\n                        fromListe: listeId,\r\n                        commentaire: String,\r\n                        description: String,\r\n                        echeance: String,\r\n                        checklist: [\r\n                            {\r\n                                titre: String,\r\n                                checked: Boolean\r\n                            }\r\n                        ]\r\n                    }\r\n                    fromId: [ids]\r\n                }\r\n            }\r\n            fromId: [ids]\r\n        }\r\n    }\r\n    fromId: [ids]\r\n}\r\n\r\n\r\n*/\r\n\r\n\r\nconst defaultTableauxState = {fromId: []};\r\n\r\nconst saveToLocalStorage = (state) => {\r\n    localStorage.setItem('weelloTableaux', JSON.stringify(state));\r\n    return state;\r\n}\r\n\r\nconst getNewId = () => {\r\n    return uuid();\r\n}\r\n\r\nconst addTableau = (state, action) => {\r\n    let { payload } = action;\r\n    let tableauId = getNewId();\r\n    return {\r\n        ...state,\r\n        [tableauId]: {\r\n            titre: payload,\r\n            listes: {fromId: []},\r\n            _id: tableauId\r\n        },\r\n        fromId: [...state.fromId, tableauId]\r\n    }\r\n}\r\n\r\nconst addListe = (state, action) => {\r\n    let { titre, tableau } = action;\r\n    let listeId = getNewId();\r\n\r\n    return {\r\n        ...state,\r\n        [tableau._id]: {\r\n            ...state[tableau._id],\r\n            listes: {\r\n                ...state[tableau._id].listes,\r\n                [listeId]: {\r\n                    titre,\r\n                    cartes: {fromId: []},\r\n                    fromTableau: tableau._id,\r\n                    _id: listeId,\r\n                    position: state[tableau._id].listes.fromId.length\r\n                },\r\n                fromId: [...state[tableau._id].listes.fromId, listeId]\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst addCarte = (state, action) => {\r\n    let { titre, liste } = action;\r\n    let carteId = getNewId();\r\n\r\n    return {\r\n        ...state,\r\n        [liste.fromTableau]: {\r\n            ...state[liste.fromTableau],\r\n            listes: {\r\n                ...state[liste.fromTableau].listes,\r\n                [liste._id]: {\r\n                    ...state[liste.fromTableau].listes[liste._id],\r\n                    cartes: {\r\n                        ...state[liste.fromTableau].listes[liste._id].cartes,\r\n                        [carteId]: {\r\n                            _id: carteId, \r\n                            titre: titre, \r\n                            fromTableau: liste.fromTableau, \r\n                            fromListe: liste._id, \r\n                            etiquette: 'rgb(250, 250, 250)', //carte background color\r\n                            checklist: [], \r\n                            position: state[liste.fromTableau].listes[liste._id].cartes.fromId.length\r\n                        },\r\n                        fromId: [...state[liste.fromTableau].listes[liste._id].cartes.fromId, carteId]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst updateList = (state, action) => {\r\n    let { field, liste, value} = action;\r\n    return {\r\n        ...state,\r\n        [liste.fromTableau]: {\r\n            ...state[liste.fromTableau],\r\n            listes: {\r\n                ...state[liste.fromTableau].listes,\r\n                [liste._id]: {\r\n                    ...state[liste.fromTableau].listes[liste._id],\r\n                    [field]: value\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst addChecklist = (state, carte, value) => {\r\n    return {\r\n        ...state,\r\n        [carte.fromTableau]: {\r\n            ...state[carte.fromTableau],\r\n            listes: {\r\n                ...state[carte.fromTableau].listes,\r\n                [carte.fromListe]: {\r\n                    ...state[carte.fromTableau].listes[carte.fromListe],\r\n                    cartes: {\r\n                        ...state[carte.fromTableau].listes[carte.fromListe].cartes,\r\n                        [carte._id]: {\r\n                            ...state[carte.fromTableau].listes[carte.fromListe].cartes[carte._id],\r\n                            checklist: [\r\n                                ...state[carte.fromTableau].listes[carte.fromListe].cartes[carte._id].checklist,\r\n                                {titre: value, checked: false}\r\n                            ]\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst updateChecklist = (state, action) => {\r\n    let { carte, index } = action;\r\n\r\n    let checklist = [...state[carte.fromTableau].listes[carte.fromListe].cartes[carte._id].checklist];\r\n    checklist[index].checked = !checklist[index].checked;\r\n\r\n    return {\r\n        ...state,\r\n        [carte.fromTableau]: {\r\n            ...state[carte.fromTableau],\r\n            listes: {\r\n                ...state[carte.fromTableau].listes,\r\n                [carte.fromListe]: {\r\n                    ...state[carte.fromTableau].listes[carte.fromListe],\r\n                    cartes: {\r\n                        ...state[carte.fromTableau].listes[carte.fromListe].cartes,\r\n                        [carte._id]: {\r\n                            ...state[carte.fromTableau].listes[carte.fromListe].cartes[carte._id],\r\n                            checklist\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst updateCarte = (state, action) => {\r\n    let { field, carte, value } = action;\r\n\r\n    if(field === 'checklist') return addChecklist(state, carte, value);\r\n    console.log(field, carte, value);\r\n    return {\r\n        ...state,\r\n        [carte.fromTableau]: {\r\n            ...state[carte.fromTableau],\r\n            listes: {\r\n                ...state[carte.fromTableau].listes,\r\n                [carte.fromListe]: {\r\n                    ...state[carte.fromTableau].listes[carte.fromListe],\r\n                    cartes: {\r\n                        ...state[carte.fromTableau].listes[carte.fromListe].cartes,\r\n                        [carte._id]: {\r\n                            ...state[carte.fromTableau].listes[carte.fromListe].cartes[carte._id],\r\n                            [field]: value\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst deleteItem = (itemType, state, item) => {\r\n    switch(itemType){\r\n        case 'tableau':\r\n            let {[item._id]: removedValue, ...rest} = state;\r\n            let newFromId = state.fromId.filter(id => id !== item._id);\r\n            \r\n            return {\r\n                ...rest,\r\n                fromId: newFromId\r\n            };\r\n\r\n        case 'carte':\r\n            const { fromTableau, fromListe, _id } = item; \r\n            let { [_id]: keyToBeRemoved, ...carteRest } = state[fromTableau].listes[fromListe].cartes;\r\n            let newCarteFromId = state[fromTableau].listes[fromListe].cartes.fromId.filter(id => id !== _id);\r\n            return {\r\n                ...state,\r\n                [item.fromTableau]: {\r\n                    ...state[item.fromTableau],\r\n                    listes: {\r\n                        ...state[item.fromTableau].listes,\r\n                        [item.fromListe]: {\r\n                            ...state[item.fromTableau].listes[item.fromListe],\r\n                            cartes: {\r\n                                ...carteRest,\r\n                                fromId: newCarteFromId\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            \r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst changeListPosition = (state, action) => {\r\n    let { liste, currentPos, nextPos } = action;\r\n    let hoveredListID = state[liste.fromTableau].listes.fromId.filter(listeId => state[liste.fromTableau].listes[listeId].position === nextPos)[0];\r\n    return {\r\n        ...state,\r\n        [liste.fromTableau]: {\r\n            ...state[liste.fromTableau],\r\n            listes: {\r\n                ...state[liste.fromTableau].listes,\r\n                [liste._id]: {\r\n                    ...state[liste.fromTableau].listes[liste._id],\r\n                    position: nextPos\r\n                },\r\n                [hoveredListID]: {\r\n                    ...state[liste.fromTableau].listes[hoveredListID],\r\n                    position: currentPos\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst tableauxReducer = (state = defaultTableauxState, action) => {\r\n    switch(action.type){\r\n        // Create    \r\n        case 'ADD_TABLEAU':\r\n            return saveToLocalStorage(addTableau(state, action));\r\n        case 'ADD_LISTE':\r\n            return saveToLocalStorage(addListe(state, action));\r\n        case 'ADD_CARTE':\r\n            return saveToLocalStorage(addCarte(state, action));\r\n        // Read\r\n        case 'LOAD_TABLEAUX':\r\n            return JSON.parse(localStorage.getItem('weelloTableaux')) || state;\r\n        // Update\r\n        case 'UPDATE_LISTE':\r\n            return saveToLocalStorage(updateList(state, action));\r\n        case 'UPDATE_CARTE':\r\n            return saveToLocalStorage(updateCarte(state, action));\r\n        case 'TOGGLE_CHECKBOX':\r\n            return saveToLocalStorage(updateChecklist(state, action));\r\n        // Position change\r\n        case 'CHANGE_LIST_POSITION':\r\n            return saveToLocalStorage(changeListPosition(state, action));\r\n        // Suppression\r\n        case 'DELETE_ITEM':\r\n            return saveToLocalStorage(deleteItem(action.itemType, state, action.item))\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default tableauxReducer;","const initialPopupState = {isOpen: false}\r\n\r\nconst popupReducers = (state = initialPopupState, action) => {\r\n    let newState = {...state};\r\n    switch(action.type){\r\n        case 'OPEN_POPUP':\r\n            newState.isOpen = true;\r\n            newState.carte = action.content.carte;\r\n            newState.listeTitre = action.content.listeTitre;\r\n            return newState;\r\n        case 'CLOSE_POPUP':\r\n            newState.isOpen = false;\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default popupReducers;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/store/configStore';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, combineReducers } from 'redux';\r\n\r\nimport tableauxReducer from '../reducers/tableaux';\r\nimport popupReducers from '../reducers/popup';\r\n\r\nexport default () => {\r\n    const store = createStore(combineReducers({\r\n        tableaux: tableauxReducer,\r\n        popup: popupReducers\r\n    }));\r\n\r\n    return store;\r\n}"],"sourceRoot":""}